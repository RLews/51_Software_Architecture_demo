C51 COMPILER V9.00   HAL_TIMER                                                             05/13/2019 22:41:32 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE HAL_TIMER
OBJECT MODULE PLACED IN ..\output\hal_timer.obj
COMPILER INVOKED BY: D:\Keil\C51\C51\BIN\C51.EXE ..\source\hal\hal_timer.c OPTIMIZE(2,SPEED) BROWSE INCDIR(..\source\app
                    -;..\source\complex_driver;..\source\driver;..\source\hal) DEBUG OBJECTEXTEND PRINT(.\hal_timer.lst) OBJECT(..\output\hal
                    -_timer.obj)

line level    source

   1          
   2          
   3          #include "hal_timer.h"
   4          
   5          #ifdef D_USE_ONEMS_INTRRUPET_MODE
   6          
   7          static volatile uint32_t halSysTimerOverflowCnt = 0;
   8          
   9          
  10          
  11          
  12          void HalSysTimerInit(void)
  13          {
  14   1              DrvSysTimerInit();
  15   1      }
  16          
  17          uint32_t HalGetCurSysTimerCnt(void)
  18          {
  19   1              uint32_t cnt = 0;
  20   1              bool_t sta = D_SYSTEM_ENTER_CRITICAL();
  21   1              
  22   1              cnt = halSysTimerOverflowCnt;
  23   1              D_SYSTEM_EXIT_CRITICAL(sta);
  24   1      
  25   1              return cnt;
  26   1      }
  27          
  28          uint32_t HalDiffTimerCnt(uint32_t last)
  29          {
  30   1              uint32_t tim = HalGetCurSysTimerCnt();
  31   1      
  32   1              if (tim >= last)
  33   1              {
  34   2                      tim -= last;
  35   2              }
  36   1              else
  37   1              {
  38   2                      tim += ((0xFFFFFFFFu - last) + 1);
  39   2              }
  40   1      
  41   1              return tim;
  42   1      }
  43          
  44          
  45          void HalSysTimerIsr()   interrupt       1
  46          {
  47   1              DrvReloadSysTimerCnt();
  48   1              halSysTimerOverflowCnt++;
  49   1      }
  50          
  51          
  52          #else
              static volatile uint16_t halSysTimerOverflowCnt = 0;
C51 COMPILER V9.00   HAL_TIMER                                                             05/13/2019 22:41:32 PAGE 2   

              
              static uint16_t HalGetSysOverflowCnt(void);
              
              
              
              void HalSysTimerInit(void)
              {
                      DrvSysTimerInit();
              }
              
              static uint16_t HalGetSysOverflowCnt(void)
              {
                      uint16_t cnt = 0;
                      
                      DrvDisableSysTimerInt();
                      cnt = halSysTimerOverflowCnt;
                      DrvEnableSysTimerInt();
              
                      return cnt;
              }
              
              
              uint32_t HalGetCurSysTimerCnt(void)
              {
                      uint32_t calcCnt = 0;
                      uint16_t tOverflowCnt = 0;
                      uint16_t tTimerCnt = 0;
                      
                      D_DISABLE_INTERRUPT();
                      tTimerCnt = DrvGetSysTimerCnt();        /* maybe overflow */
                      tOverflowCnt = HalGetSysOverflowCnt();
                      if (DrvGetSysTimerIntFlag())
                      {
                              tTimerCnt = DrvGetSysTimerCnt();        
                              tOverflowCnt++;
                      }
                      calcCnt = tTimerCnt;
                      calcCnt |= (((uint32_t)tOverflowCnt) << 16);
                      
                      D_ENABLE_INTERRUPT();
              
                      return calcCnt;
              }
              
              uint32_t HalDiffTimerCnt(uint32_t last)
              {
                      uint32_t tim = 0;
              
                      tim = HalGetCurSysTimerCnt();
                      if (tim >= last)
                      {
                              tim -= last;
                      }
                      else
                      {
                              tim += ((0xFFFFFFFFu - last) + 1);
                      }
              
                      return tim;
              }
              
              void HalSysTimerIsr()   interrupt       1
C51 COMPILER V9.00   HAL_TIMER                                                             05/13/2019 22:41:32 PAGE 3   

              {
                      DrvReloadSysTimerCnt();
                      halSysTimerOverflowCnt++;
              }
              
              #endif
 122          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    250    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
