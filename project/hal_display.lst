C51 COMPILER V9.00   HAL_DISPLAY                                                           04/27/2019 10:35:07 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE HAL_DISPLAY
OBJECT MODULE PLACED IN ..\output\hal_display.obj
COMPILER INVOKED BY: D:\Keil\C51\C51\BIN\C51.EXE ..\source\hal\hal_display.c BROWSE INCDIR(..\source\app;..\source\compl
                    -ex_driver;..\source\driver;..\source\hal) DEBUG OBJECTEXTEND PRINT(.\hal_display.lst) OBJECT(..\output\hal_display.obj)

line level    source

   1          
   2          
   3          #include "hal_display.h"
   4          
   5          extern calendar_t sysCalendar;
   6          
   7          
   8          static void HalDisplayInit(void);
   9          static void HalFlashCalendar(void);
  10          static void HalDisplayStr(uint8_t x, uint8_t y, const uint8_t *str);
  11          static void HalDisplayCalendar(void);
  12          
  13          
  14          D_SOFTWARE_INTERFACE halDisplayInterface_t halDisplayInterface = {
  15                  HalDisplayInit,
  16                  HalDisplayStr,
  17                  HalFlashCalendar
  18          };
  19          
  20          static void HalDisplayInit(void)
  21          {
  22   1              drvLcdInterface.LcdInit();
  23   1      }
  24          
  25          static void HalDisplayCalendar(void)
  26          {
  27   1              calendar_t * pCalendar = &(sysCalendar);
  28   1              uint8_t str[11] = {0};
  29   1              
  30   1              str[0] = '2';
  31   1              str[1] = '0';
  32   1              str[2] = ((pCalendar->year >> 4) & 0x000F) + '0';//“年”高位数字转换为 ASCII 码
  33   1              str[3] = (pCalendar->year & 0x000F) + '0';//“年”低位数字转换为 ASCII 码
  34   1              str[4] = '-'; //添加日期分隔符
  35   1              str[5] = (pCalendar->mon >> 4) + '0'; //“月”
  36   1              str[6] = (pCalendar->mon & 0x0F) + '0';
  37   1              str[7] = '-';
  38   1              str[8] = (pCalendar->day >> 4) + '0'; //“日”
  39   1              str[9] = (pCalendar->day & 0x0F) + '0';
  40   1              str[10] = '\0';
  41   1              HalDisplayStr(0, 0, str); //显示到液晶的第一行
  42   1      
  43   1              str[0] = (pCalendar->week & 0x0F) + '0'; //“星期”
  44   1              str[1] = '\0';
  45   1              HalDisplayStr(11, 0, "week");
  46   1              HalDisplayStr(15, 0, str); //显示到液晶的第一行
  47   1      
  48   1              str[0] = (pCalendar->hour >> 4) + '0'; //“时”
  49   1              str[1] = (pCalendar->hour & 0x0F) + '0';
  50   1              str[2] = ':'; //添加时间分隔符
  51   1              str[3] = (pCalendar->min >> 4) + '0'; //“分”
  52   1              str[4] = (pCalendar->min & 0x0F) + '0';
  53   1              str[5] = ':';
  54   1              str[6] = (pCalendar->sec >> 4) + '0'; //“秒”
C51 COMPILER V9.00   HAL_DISPLAY                                                           04/27/2019 10:35:07 PAGE 2   

  55   1              str[7] = (pCalendar->sec & 0x0F) + '0';
  56   1              str[8] = '\0';
  57   1              HalDisplayStr(4, 1, str); //显示到液晶的第二行
  58   1      }
  59          
  60          static void HalFlashCalendar(void)
  61          {
  62   1              static uint8_t secBak = 0;
  63   1              calendar_t * pCalendar = &(sysCalendar);
  64   1      
  65   1              if (secBak != pCalendar->sec)
  66   1              {
  67   2                      secBak = pCalendar->sec;
  68   2                      HalDisplayCalendar();
  69   2              }
  70   1      }
  71          
  72          
  73          static void HalDisplayStr(uint8_t x, uint8_t y, const uint8_t *str)
  74          {
  75   1              uint8_t addr = 0;
  76   1              //由输入的显示坐标计算显示 RAM 的地址
  77   1              if (y == 0)
  78   1              {
  79   2                      addr = 0x00 + x; //第一行字符地址从 0x00 起始
  80   2              }
  81   1              else
  82   1              {
  83   2                      addr = 0x40 + x; //第二行字符地址从 0x40 起始
  84   2              }
  85   1              //由起始显示 RAM 地址连续写入字符串
  86   1              drvLcdInterface.LcdWriteCmd(addr | 0x80); //写入起始地址
  87   1              while (*str != '\0') //连续写入字符串数据，直到检测到结束符
  88   1              {
  89   2                      drvLcdInterface.LcdWriteDat(*str);
  90   2                      str++;
  91   2              }
  92   1      }
  93          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    387    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
