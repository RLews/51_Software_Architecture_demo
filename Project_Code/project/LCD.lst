C51 COMPILER V9.00   LCD                                                                   04/24/2019 23:47:01 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN ..\output\LCD.obj
COMPILER INVOKED BY: D:\Keil\C51\C51\BIN\C51.EXE ..\source\complex_driver\LCD.c BROWSE INCDIR(..\source\app;..\source\co
                    -mplex_driver;..\source\driver;..\source\hal) DEBUG OBJECTEXTEND PRINT(.\LCD.lst) OBJECT(..\output\LCD.obj)

line level    source

   1          /*
   2                          LCD1602底层程序
   3          */
   4          #include <reg52.h>
   5          #define LCD1602_DB P0
   6          
   7          sbit LCD1602_RS = P2^5;
   8          sbit LCD1602_RW = P2^6;
   9          sbit LCD1602_E = P2^7;
  10          
  11          void LcdWaitReady() //等待液晶准备好
  12          {
  13   1              unsigned char sta;
  14   1              LCD1602_DB = 0xFF;
  15   1              LCD1602_RS = 0;
  16   1              LCD1602_RW = 1;
  17   1              do
  18   1              {
  19   2                      LCD1602_E = 1;
  20   2                      sta = LCD1602_DB; //读取状态字
  21   2                      LCD1602_E = 0;
  22   2              } while (sta & 0x80); //bit7 等于 1 表示液晶正忙，重复检测直到其等于 0 为止
  23   1      }
  24          
  25          void LcdWriteCmd(unsigned char cmd) //写入命令函数
  26          {
  27   1              LcdWaitReady();
  28   1              LCD1602_RS = 0;
  29   1              LCD1602_RW = 0;
  30   1              LCD1602_DB = cmd;
  31   1              LCD1602_E = 1;
  32   1              LCD1602_E = 0;
  33   1      }
  34          
  35          void LcdWriteDat(unsigned char dat) //写入数据函数
  36          {
  37   1              LcdWaitReady();
  38   1              LCD1602_RS = 1;
  39   1              LCD1602_RW = 0;
  40   1              LCD1602_DB = dat;
  41   1              LCD1602_E = 1;
  42   1              LCD1602_E = 0;
  43   1      }
  44          
  45          void LcdShowStr(unsigned char x, unsigned char y, const unsigned char *str) //显示字符串，屏幕起始坐标(x,y
             -)，字符串指针 str
  46          {
  47   1              unsigned char addr;
  48   1              //由输入的显示坐标计算显示 RAM 的地址
  49   1              if (y == 0)
  50   1                      addr = 0x00 + x; //第一行字符地址从 0x00 起始
  51   1              else
  52   1                      addr = 0x40 + x; //第二行字符地址从 0x40 起始
  53   1              //由起始显示 RAM 地址连续写入字符串
C51 COMPILER V9.00   LCD                                                                   04/24/2019 23:47:01 PAGE 2   

  54   1              LcdWriteCmd(addr | 0x80); //写入起始地址
  55   1              while (*str != '\0') //连续写入字符串数据，直到检测到结束符
  56   1              {
  57   2                      LcdWriteDat(*str);
  58   2                      str++;
  59   2              }
  60   1      }
  61          
  62          void LcdInit() //液晶初始化函数
  63          {
  64   1              LcdWriteCmd(0x38); //16*2 显示，5*7 点阵，8 位数据接口
  65   1              LcdWriteCmd(0x0C); //显示器开，光标关闭
  66   1              LcdWriteCmd(0x06); //文字不动，地址自动+1
  67   1              LcdWriteCmd(0x01); //清屏
  68   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    107    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
